// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chatService.proto

package protogen

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Chat service

type ChatClient interface {
	PostWebhookRoom(ctx context.Context, in *Room, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	PostWebhookMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) PostWebhookRoom(ctx context.Context, in *Room, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/proto.Chat/PostWebhookRoom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) PostWebhookMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/proto.Chat/PostWebhookMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Chat service

type ChatServer interface {
	PostWebhookRoom(context.Context, *Room) (*google_protobuf1.Empty, error)
	PostWebhookMessage(context.Context, *Message) (*google_protobuf1.Empty, error)
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_PostWebhookRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Room)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).PostWebhookRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Chat/PostWebhookRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).PostWebhookRoom(ctx, req.(*Room))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_PostWebhookMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).PostWebhookMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Chat/PostWebhookMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).PostWebhookMessage(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostWebhookRoom",
			Handler:    _Chat_PostWebhookRoom_Handler,
		},
		{
			MethodName: "PostWebhookMessage",
			Handler:    _Chat_PostWebhookMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chatService.proto",
}

func init() { proto.RegisterFile("chatService.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xce, 0x48, 0x2c,
	0x09, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05,
	0x53, 0x52, 0x32, 0xe9, 0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x89, 0x05, 0x99, 0xfa, 0x89, 0x79,
	0x79, 0xf9, 0x25, 0x89, 0x25, 0x99, 0xf9, 0x79, 0xc5, 0x10, 0x45, 0x52, 0xd2, 0x50, 0x59, 0x30,
	0x2f, 0xa9, 0x34, 0x4d, 0x3f, 0x35, 0xb7, 0xa0, 0xa4, 0x12, 0x2a, 0x09, 0x36, 0xd4, 0x37, 0xb5,
	0xb8, 0x38, 0x31, 0x1d, 0x6a, 0xa8, 0xd1, 0x56, 0x46, 0x2e, 0x16, 0xe7, 0x8c, 0xc4, 0x12, 0xa1,
	0x40, 0x2e, 0xfe, 0x80, 0xfc, 0xe2, 0x92, 0xf0, 0xd4, 0xa4, 0x8c, 0xfc, 0xfc, 0xec, 0xa0, 0xfc,
	0xfc, 0x5c, 0x21, 0x6e, 0x88, 0x1a, 0x3d, 0x10, 0x47, 0x4a, 0x4c, 0x0f, 0x62, 0xb2, 0x1e, 0xcc,
	0x64, 0x3d, 0x57, 0x90, 0xc9, 0x4a, 0x92, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0x12, 0x56, 0xe2, 0xd3,
	0x2f, 0x87, 0x68, 0x2d, 0xd6, 0x2f, 0xca, 0xcf, 0xcf, 0xb5, 0x62, 0xd4, 0x12, 0x8a, 0xe2, 0x12,
	0x42, 0x32, 0x12, 0x6a, 0xaf, 0x10, 0x1f, 0xd4, 0x54, 0x28, 0x1f, 0xa7, 0xc1, 0x32, 0x60, 0x83,
	0xc5, 0x94, 0x04, 0x11, 0x06, 0xe7, 0x42, 0xb4, 0x58, 0x31, 0x6a, 0x39, 0x71, 0x45, 0x71, 0x80,
	0xd5, 0xa7, 0xa7, 0xe6, 0x25, 0xb1, 0x81, 0x59, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1b,
	0xa4, 0xe2, 0x1b, 0x34, 0x01, 0x00, 0x00,
}
