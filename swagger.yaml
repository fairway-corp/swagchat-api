swagger: '2.0'
info:
  title: Swagchat RESTful API
  description: ""
  version: 0.3.2
  contact:
    email: shinichi.minobe@gmail.com
  license:
    name: MIT
    url: https://github.com/fairway-corp/swagchat-api/blob/master/LICENSE
host: localhost:9000
basePath: /v0
schemes:
- http
paths:
  /users:
    post:
      summary: Create user item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: body
        name: user item
        description: Create user item json
        required: true
        schema:
          $ref: '#/definitions/RequestUserForPost'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/ResponseUser'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    get:
      summary: Get user list.
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseUsers'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /users/{userId}:
    get:
      summary: Get user item.
      produces:
      - application/json
      parameters:
      - in: path
        name: userId
        description: User ID
        required: true
        type: string
        x-example: custom-user-id-0001
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseUserWithRoomsAndDevices'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    put:
      summary: Update user item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: path
        name: userId
        description: User ID
        required: true
        type: string
        x-example: custom-user-id-0001
      - in: body
        name: user item json
        description: Update user item json
        required: true
        schema:
          $ref: '#/definitions/RequestUserForPut'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseUser'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    delete:
      summary: Delete user item.
      produces:
      - application/json
      parameters:
      - in: path
        name: userId
        description: User ID
        required: true
        type: string
        x-example: custom-user-id-0001
      responses:
        204:
          description: No Content
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /users/{userId}/devices/{platform}:
    post:
      summary: Create device item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: path
        name: userId
        description: User ID
        required: true
        type: string
        x-example: custom-user-id-0001
      - in: path
        name: platform
        description: Platform
        required: true
        type: integer
        x-example: 1
      - in: body
        name: device item
        description: Create device item json
        required: true
        schema:
          $ref: '#/definitions/RequestDevice'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/ResponseDevice'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        404:
          description: Not Found.
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    get:
      summary: Get device item.
      produces:
      - application/json
      parameters:
      - in: path
        name: userId
        description: User ID
        required: true
        type: string
        x-example: custom-user-id-0001
      - in: path
        name: platform
        description: Platform
        required: true
        type: integer
        x-example: 1
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseDevice'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    put:
      summary: Update device item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: path
        name: userId
        description: User ID
        required: true
        type: string
        x-example: custom-user-id-0001
      - in: path
        name: platform
        description: Platform
        required: true
        type: integer
        x-example: 1
      - in: body
        name: user item json
        description: Update user item json
        required: true
        schema:
          $ref: '#/definitions/RequestDevice'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseDevice'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    delete:
      summary: Delete device item.
      produces:
      - application/json
      parameters:
      - in: path
        name: userId
        description: User ID
        required: true
        type: string
        x-example: custom-user-id-0001
      - in: path
        name: platform
        description: Platform
        required: true
        type: integer
        x-example: 1
      responses:
        204:
          description: No Content
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /users/{userId}/devices:
    get:
      summary: Get device list.
      produces:
      - application/json
      parameters:
      - in: path
        name: userId
        description: User ID
        required: true
        type: string
        x-example: custom-user-id-0001
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseDevices'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /rooms:
    post:
      summary: Create room item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: body
        name: room item
        description: Create room item json
        required: true
        schema:
          $ref: '#/definitions/RequestRoomForPost'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/ResponseRoom'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    get:
      summary: Get room list.
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseRooms'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /rooms/{roomId}:
    get:
      summary: Get room item.
      produces:
      - application/json
      parameters:
      - in: path
        name: roomId
        description: Room ID
        required: true
        type: string
        x-example: custom-room-id-0001
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseRoom'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    put:
      summary: Update room item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: path
        name: roomId
        description: Room ID
        required: true
        type: string
        x-example: custom-room-id-0001
      - in: body
        name: room item json
        description: Update room item json
        required: true
        schema:
          $ref: '#/definitions/RequestRoomForPut'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseRoom'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    delete:
      summary: Delete room item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: path
        name: roomId
        description: Room ID
        required: true
        type: string
        x-example: custom-room-id-0001
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /rooms/{roomId}/messages:
    get:
      summary: Get room's message list
      produces:
      - application/json
      parameters:
      - in: path
        name: roomId
        description: Room ID
        required: true
        type: string
        x-example: custom-room-id-0001
      - in: query
        name: limit
        description: Paging limit
        required: false
        type: integer
        x-example: 10
      - in: query
        name: offset
        description: Paging offset
        required: false
        type: integer
        x-example: 0
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseMessages'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /rooms/{roomId}/users:
    post:
      summary: Create room's user item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: path
        name: roomId
        description: Room ID
        required: true
        type: string
        x-example: custom-room-id-0001
      - in: body
        name: room's user ids json
        description: Create room's user ids json
        required: true
        schema:
          $ref: '#/definitions/RequestRoomsUsers'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/ResponseRoomUsers'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    put:
      summary: Update room's user item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: path
        name: roomId
        description: Room ID
        required: true
        type: string
        x-example: custom-room-id-0001
      - in: body
        name: room user item json
        description: Update room user item json
        required: true
        schema:
          $ref: '#/definitions/RequestRoomUserForPut'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseRoomUsers'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    delete:
      summary: Delete room's user item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: path
        name: roomId
        description: Room ID
        required: true
        type: string
        x-example: custom-room-id-0001
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseRoomUsers'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /rooms/{roomId}/users/{userId}:
    put:
      summary: Update room's user item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: path
        name: roomId
        description: Room ID
        required: true
        type: string
        x-example: custom-room-id-0001
      - in: path
        name: userId
        description: User ID
        required: true
        type: string
        x-example: custom-user-id-0001
      - in: body
        name: room user item json
        description: Update room user item json
        required: true
        schema:
          $ref: '#/definitions/RequestRoomUserForPut'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseRoomUser'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /messages:
    post:
      summary: Create message item.
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: body
        name: message item
        required: true
        schema:
          $ref: '#/definitions/RequestMessage'
      responses:
        201:
          description: Created
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /messages/{messageId}:
    get:
      summary: Get message item.
      produces:
      - application/json
      parameters:
      - in: path
        name: messageId
        description: Message ID
        required: true
        type: string
        x-example: custom-message-id-0001
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ResponseMessage'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
  /assets:
    post:
      summary: Create asset item.
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - in: body
        name: user item
        description: Create user item json
        required: true
        schema:
          $ref: '#/definitions/RequestUserForPost'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/ResponseAsset'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/problemDetailForBadGateway'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problemDetailForInternalServerError'
    get:
      summary: Get asset item.
      produces: [
        "image/png", "image/jpeg", "image/gif"
      ]
      responses:
        200:
          description: OK
        404:
          description: Not Found
definitions:
  RequestUserForPost:
    type: object
    required:
    - name
    properties:
      userId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      name:
        type: string
        example: rick
      pictureUrl:
        type: string
        example: http://example.com/img/rick.png
      informationUrl:
        type: string
        example: http://example.com/user/rick
      unreadCount:
        type: integer
        example: 0
      metaData:
        type: object
        example: {"key": "value"}
  RequestUserForPut:
    type: object
    properties:
      name:
        type: string
        example: rick
      pictureUrl:
        type: string
        example: http://example.com/img/rick.png
      informationUrl:
        type: string
        example: http://example.com/user/rick
      unreadCount:
        type: integer
        example: 0
      metaData:
        type: object
        example: {"key": "value"}
  ResponseUser:
    type: object
    required:
    - userId
    - name
    - pictureUrl
    - unreadCount
    - metaData
    - created
    - modified
    properties:
      userId:
        type: string
        example: custom-user-id-0001
      name:
        type: string
        example: custom user 0001
      pictureUrl:
        type: string
        example: http://example.com/img/rick.png
      informationUrl:
        type: string
        example: http://example.com/user/rick
      unreadCount:
        type: integer
        example: 0
      metaData:
        type: object
        example: {"key": "value"}
      created:
        type: string
        example: "2017-05-01T00:00:00Z"
      modified:
        type: string
        example: "2017-05-01T00:00:00Z"
  ResponseUsers:
    type: object
    required:
    - users
    properties:
      users:
        items:
          $ref: '#/definitions/ResponseUser'
  ResponseUserWithRoomsAndDevices:
    type: object
    required:
    - userId
    - name
    - pictureUrl
    - unreadCount
    - metaData
    - created
    - modified
    - rooms
    - devices
    properties:
      userId:
        type: string
        example: custom-user-id-0001
      name:
        type: string
        example: custom user 0001
      pictureUrl:
        type: string
        example: http://example.com/img/rick.png
      informationUrl:
        type: string
        example: http://example.com/user/rick
      unreadCount:
        type: integer
        example: 0
      metaData:
        type: object
        example: {"key": "value"}
      created:
        type: string
        example: "2017-05-01T00:00:00Z"
      modified:
        type: string
        example: "2017-05-01T00:00:00Z"
      rooms:
        type: array
        items:
          $ref: '#/definitions/ResponseRoom'
      devices:
        type: array
        items:
          $ref: '#/definitions/ResponseDevice'
  RequestDevice:
    type: object
    required:
    - token
    properties:
      token:
        type: string
        example: abcdefghijelmnopqrstuvwxyz
  ResponseDevice:
    type: object
    required:
    - userId
    - platform
    - token
    - notificationDeviceId
    properties:
      userId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      platform:
        type: integer
        example: 1
      token:
        type: string
        example: abcdefghijelmnopqrstuvwxyz
      notificationDeviceId:
        type: string
        example: abcdefghijelmnopqrstuvwxyz
  ResponseDevices:
    type: object
    required:
    - devices
    properties:
      devices:
        items:
          $ref: '#/definitions/ResponseDevice'
  RequestRoomForPost:
    type: object
    required:
    - userId
    - name
    properties:
      roomId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      userId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      name:
        type: string
        example: rick's room
      pictureUrl:
        type: string
        example: http://example.com/img/rick-room.png
      informationUrl:
        type: string
        example: http://example.com/room/rick
      metaData:
        type: object
        example: {"key": "value"}
      isPublic:
        type: boolean
        example: true
  RequestRoomForPut:
    type: object
    properties:
      name:
        type: string
        example: rick's room
      pictureUrl:
        type: string
        example: http://example.com/img/rick-room.png
      informationUrl:
        type: string
        example: http://example.com/room/rick
      metaData:
        type: object
        example: {"key": "value"}
      isPublic:
        type: boolean
        example: true
  ResponseRoom:
    type: object
    required:
    - roomId
    - userId
    - name
    - metaData
    - isPublic
    - lastMessage
    - lastMessageUpdated
    - created
    - modified
    properties:
      roomId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      userId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      name:
        type: string
        example: rick
      pictureUrl:
        type: string
        example: http://example.com/img/rick.png
      informationUrl:
        type: string
        example: http://example.com/user/rick
      metaData:
        type: object
        example: {"key": "value"}
      isPublic:
        type: boolean
        example: true
      lastMessage:
        type: string
        example: Hello, World
      lastMessageUpdated:
        type: integer
        example: 1488294000000000000
      notificationTopicId:
        type: string
        example: abcdefghijklmnopqrstuvwz
      created:
        type: string
        example: "2017-05-01T00:00:00Z"
      modified:
        type: string
        example: "2017-05-01T00:00:00Z"
  ResponseRooms:
    type: object
    required:
    - rooms
    properties:
      rooms:
        items:
          $ref: '#/definitions/ResponseRoom'
  RequestRoomsUsers:
    type: object
    required:
    - userIds
    properties:
      userIds:
        type: array
        items:
          type: string
          example: d290f1ee-6c54-4b01-90e6-d701748f0851, d290f1ee-6c54-4b01-90e6-d701748f0852
  RequestRoomUserForPut:
    type: object
    properties:
      unreadCount:
        type: integer
        example: 1
      metaData:
        type: object
        example: {"key": "value"}
  ResponseRoomUser:
    type: object
    required:
    - roomId
    - userId
    - unreadCount
    - metaData
    - created
    - modified
    properties:
      roomId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      userId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      unreadCount:
        type: integer
        example: 1
      metaData:
        type: object
        example: {"key": "value"}
      created:
        type: string
        example: "2017-05-01T00:00:00Z"
      modified:
        type: string
        example: "2017-05-01T00:00:00Z"
  ResponseRoomUsers:
    type: object
    required:
    - roomUsers
    properties:
      roomUsers:
        items:
          $ref: '#/definitions/ResponseRoomUser'
  RequestMessage:
    type: object
    required:
    - roomId
    - userId
    - type
    - payload
    properties:
      roomId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      userId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      type:
        type: string
        example: text
      payload:
        type: object
        example: {"text":"Hello, world."}
  ResponseMessage:
    type: object
    required:
    - messageId
    - roomId
    - userId
    - type
    - payload
    - created
    - modified
    properties:
      id:
        type: integer
        example: 1
      messageId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      roomId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      userId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      type:
        type: string
        example: text
      payload:
        type: object
        example: {"text":"Hello, world."}
      created:
        type: string
        example: "2017-05-01T00:00:00Z"
      modified:
        type: string
        example: "2017-05-01T00:00:00Z"
  ResponseMessages:
    type: object
    required:
    - messages
    properties:
      messages:
        items:
          $ref: '#/definitions/ResponseMessage'
  ResponseAsset:
    type: object
    required:
    - assetId
    - sourceUrl
    - mime
    properties:
      assetId:
        type: string
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      sourceUrl:
        type: string
        example: http://example.com/img/asset.png
      mime:
        type: string
        example: image/png
  problemDetailForBadGateway :
    type: object
    required:
    - title
    - status
    - errorName
    properties:
      title:
        type: string
        example: Request parameter error. (Create room item).
      status:
        type: integer
        example: 400
      errorName:
        type: string
        example: invalid-json
      invalidParams: 
        type: array
        items:
          $ref: '#/definitions/invalidParam'
  problemDetailForInternalServerError :
    type: object
    required:
    - title
    - status
    - errorName
    - detail
    properties:
      title:
        type: string
        example: Your request parameters didn't validate.
      status:
        type: integer
        example: 500
      errorName:
        type: string
        example: database-error
      detail:
        type: string
        example: no rows in result set.
  invalidParam:
    type: object
    properties:
      name:
        type: string
        example: name
      reason:
        type: string
        example: name is required, but it's empty.