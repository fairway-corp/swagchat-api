// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: operatorMessage.proto

package chatpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Bot struct {
	ID             uint64 `protobuf:"varint,11,opt,name=id" json:"-" db:"id"`
	BotID          string `protobuf:"bytes,12,opt,name=bot_id,json=botId" json:"botId" db:"bot_id"`
	UserID         string `protobuf:"bytes,13,opt,name=user_id,json=userId" json:"userId" db:"user_id"`
	Service        string `protobuf:"bytes,14,opt,name=service" json:"service" db:"service"`
	ProjectID      string `protobuf:"bytes,15,opt,name=project_id,json=projectId" json:"projectId" db:"project_id"`
	ServiceAccount string `protobuf:"bytes,16,opt,name=service_account,json=serviceAccount" json:"serviceAccount" db:"service_account"`
	Suggest        *bool  `protobuf:"varint,17,opt,name=suggest" json:"suggest" db:"suggest"`
	Created        int64  `protobuf:"varint,18,opt,name=created" json:"created" db:"created"`
	Modified       int64  `protobuf:"varint,19,opt,name=modified" json:"modified" db:"modified"`
	Deleted        int64  `protobuf:"varint,20,opt,name=deleted" json:"deleted" db:"deleted"`
}

func (m *Bot) Reset()                    { *m = Bot{} }
func (m *Bot) String() string            { return proto.CompactTextString(m) }
func (*Bot) ProtoMessage()               {}
func (*Bot) Descriptor() ([]byte, []int) { return fileDescriptorOperatorMessage, []int{0} }

func (m *Bot) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Bot) GetBotID() string {
	if m != nil {
		return m.BotID
	}
	return ""
}

func (m *Bot) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Bot) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Bot) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *Bot) GetServiceAccount() string {
	if m != nil {
		return m.ServiceAccount
	}
	return ""
}

func (m *Bot) GetSuggest() bool {
	if m != nil && m.Suggest != nil {
		return *m.Suggest
	}
	return false
}

func (m *Bot) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Bot) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *Bot) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

type GuestSetting struct {
	ID            uint64 `protobuf:"varint,11,opt,name=id" json:"-" db:"id"`
	EnableWebchat *bool  `protobuf:"varint,12,opt,name=enable_webchat,json=enableWebchat" json:"enableWebchat" db:"enable_webchat"`
}

func (m *GuestSetting) Reset()                    { *m = GuestSetting{} }
func (m *GuestSetting) String() string            { return proto.CompactTextString(m) }
func (*GuestSetting) ProtoMessage()               {}
func (*GuestSetting) Descriptor() ([]byte, []int) { return fileDescriptorOperatorMessage, []int{1} }

func (m *GuestSetting) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *GuestSetting) GetEnableWebchat() bool {
	if m != nil && m.EnableWebchat != nil {
		return *m.EnableWebchat
	}
	return false
}

type OperatorSetting struct {
	ID                   uint64 `protobuf:"varint,11,opt,name=id" json:"-" db:"id"`
	SettingID            string `protobuf:"bytes,12,opt,name=setting_id,json=settingId" json:"settingId" db:"setting_id"`
	SiteID               string `protobuf:"bytes,13,opt,name=site_id,json=siteId" json:"siteId" db:"site_id"`
	Domain               string `protobuf:"bytes,14,opt,name=domain" json:"domain" db:"domain"`
	SystemUserID         string `protobuf:"bytes,15,opt,name=system_user_id,json=systemUserId" json:"systemUserId" db:"system_user_id"`
	FirstMessage         []byte `protobuf:"bytes,16,opt,name=first_message,json=firstMessage" json:"firstMessage" db:"first_message"`
	TimeoutMessage       []byte `protobuf:"bytes,17,opt,name=timeout_message,json=timeoutMessage" json:"timeoutMessage" db:"timeout_message"`
	OperatorBaseURL      string `protobuf:"bytes,18,opt,name=operator_base_url,json=operatorBaseUrl" json:"operatorBaseUrl" db:"operator_base_url"`
	NotificationSlackURL string `protobuf:"bytes,19,opt,name=notification_slack_url,json=notificationSlackUrl" json:"notificationSlackUrl" db:"notification_slack_url"`
	Idp                  []byte `protobuf:"bytes,20,opt,name=idp" json:"idp" db:"idp"`
	Created              int64  `protobuf:"varint,30,opt,name=created" json:"created" db:"created"`
	Modified             int64  `protobuf:"varint,31,opt,name=modified" json:"modified" db:"modified"`
}

func (m *OperatorSetting) Reset()                    { *m = OperatorSetting{} }
func (m *OperatorSetting) String() string            { return proto.CompactTextString(m) }
func (*OperatorSetting) ProtoMessage()               {}
func (*OperatorSetting) Descriptor() ([]byte, []int) { return fileDescriptorOperatorMessage, []int{2} }

func (m *OperatorSetting) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *OperatorSetting) GetSettingID() string {
	if m != nil {
		return m.SettingID
	}
	return ""
}

func (m *OperatorSetting) GetSiteID() string {
	if m != nil {
		return m.SiteID
	}
	return ""
}

func (m *OperatorSetting) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *OperatorSetting) GetSystemUserID() string {
	if m != nil {
		return m.SystemUserID
	}
	return ""
}

func (m *OperatorSetting) GetFirstMessage() []byte {
	if m != nil {
		return m.FirstMessage
	}
	return nil
}

func (m *OperatorSetting) GetTimeoutMessage() []byte {
	if m != nil {
		return m.TimeoutMessage
	}
	return nil
}

func (m *OperatorSetting) GetOperatorBaseURL() string {
	if m != nil {
		return m.OperatorBaseURL
	}
	return ""
}

func (m *OperatorSetting) GetNotificationSlackURL() string {
	if m != nil {
		return m.NotificationSlackURL
	}
	return ""
}

func (m *OperatorSetting) GetIdp() []byte {
	if m != nil {
		return m.Idp
	}
	return nil
}

func (m *OperatorSetting) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *OperatorSetting) GetModified() int64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

type CreateBotRequest struct {
	UserID         string `protobuf:"bytes,13,opt,name=user_id,json=userId" json:"userId"`
	Service        string `protobuf:"bytes,14,opt,name=service" json:"service"`
	ProjectID      string `protobuf:"bytes,15,opt,name=project_id,json=projectId" json:"projectId"`
	ServiceAccount string `protobuf:"bytes,16,opt,name=service_account,json=serviceAccount" json:"serviceAccount"`
	Suggest        *bool  `protobuf:"varint,17,opt,name=suggest" json:"suggest"`
}

func (m *CreateBotRequest) Reset()                    { *m = CreateBotRequest{} }
func (m *CreateBotRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateBotRequest) ProtoMessage()               {}
func (*CreateBotRequest) Descriptor() ([]byte, []int) { return fileDescriptorOperatorMessage, []int{3} }

func (m *CreateBotRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *CreateBotRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CreateBotRequest) GetProjectID() string {
	if m != nil {
		return m.ProjectID
	}
	return ""
}

func (m *CreateBotRequest) GetServiceAccount() string {
	if m != nil {
		return m.ServiceAccount
	}
	return ""
}

func (m *CreateBotRequest) GetSuggest() bool {
	if m != nil && m.Suggest != nil {
		return *m.Suggest
	}
	return false
}

type GetBotRequest struct {
	BotID  string `protobuf:"bytes,11,opt,name=bot_id,json=botId" json:"botId"`
	UserID string `protobuf:"bytes,13,opt,name=user_id,json=userId" json:"userId"`
}

func (m *GetBotRequest) Reset()                    { *m = GetBotRequest{} }
func (m *GetBotRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBotRequest) ProtoMessage()               {}
func (*GetBotRequest) Descriptor() ([]byte, []int) { return fileDescriptorOperatorMessage, []int{4} }

func (m *GetBotRequest) GetBotID() string {
	if m != nil {
		return m.BotID
	}
	return ""
}

func (m *GetBotRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type CreateGuestRequest struct {
	UserID         string `protobuf:"bytes,11,opt,name=user_id,json=userId" json:"userId"`
	Name           string `protobuf:"bytes,12,opt,name=name" json:"name"`
	PictureURL     string `protobuf:"bytes,13,opt,name=picture_url,json=pictureUrl" json:"pictureUrl"`
	InformationURL string `protobuf:"bytes,14,opt,name=information_url,json=informationUrl" json:"informationUrl"`
	MetaData       []byte `protobuf:"bytes,15,opt,name=meta_data,json=metaData" json:"metaData"`
	Public         bool   `protobuf:"varint,16,opt,name=public" json:"public"`
	CanBlock       bool   `protobuf:"varint,17,opt,name=can_block,json=canBlock" json:"canBlock,omitempty"`
	Lang           string `protobuf:"bytes,18,opt,name=lang" json:"lang"`
}

func (m *CreateGuestRequest) Reset()         { *m = CreateGuestRequest{} }
func (m *CreateGuestRequest) String() string { return proto.CompactTextString(m) }
func (*CreateGuestRequest) ProtoMessage()    {}
func (*CreateGuestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorOperatorMessage, []int{5}
}

func (m *CreateGuestRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *CreateGuestRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateGuestRequest) GetPictureURL() string {
	if m != nil {
		return m.PictureURL
	}
	return ""
}

func (m *CreateGuestRequest) GetInformationURL() string {
	if m != nil {
		return m.InformationURL
	}
	return ""
}

func (m *CreateGuestRequest) GetMetaData() []byte {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *CreateGuestRequest) GetPublic() bool {
	if m != nil {
		return m.Public
	}
	return false
}

func (m *CreateGuestRequest) GetCanBlock() bool {
	if m != nil {
		return m.CanBlock
	}
	return false
}

func (m *CreateGuestRequest) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

type GetGuestRequest struct {
	UserId *string `protobuf:"bytes,11,opt,name=user_id,json=userId" json:"userId"`
}

func (m *GetGuestRequest) Reset()                    { *m = GetGuestRequest{} }
func (m *GetGuestRequest) String() string            { return proto.CompactTextString(m) }
func (*GetGuestRequest) ProtoMessage()               {}
func (*GetGuestRequest) Descriptor() ([]byte, []int) { return fileDescriptorOperatorMessage, []int{6} }

func (m *GetGuestRequest) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

type CreateGuestSettingRequest struct {
	EnableWebchat *bool `protobuf:"varint,11,opt,name=enable_webchat,json=enableWebchat" json:"enableWebchat" db:"enable_webchat"`
}

func (m *CreateGuestSettingRequest) Reset()         { *m = CreateGuestSettingRequest{} }
func (m *CreateGuestSettingRequest) String() string { return proto.CompactTextString(m) }
func (*CreateGuestSettingRequest) ProtoMessage()    {}
func (*CreateGuestSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorOperatorMessage, []int{7}
}

func (m *CreateGuestSettingRequest) GetEnableWebchat() bool {
	if m != nil && m.EnableWebchat != nil {
		return *m.EnableWebchat
	}
	return false
}

type GetGuestSettingRequest struct {
}

func (m *GetGuestSettingRequest) Reset()         { *m = GetGuestSettingRequest{} }
func (m *GetGuestSettingRequest) String() string { return proto.CompactTextString(m) }
func (*GetGuestSettingRequest) ProtoMessage()    {}
func (*GetGuestSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorOperatorMessage, []int{8}
}

type UpdateGuestSettingRequest struct {
	EnableWebchat *bool `protobuf:"varint,11,opt,name=enable_webchat,json=enableWebchat" json:"enableWebchat" db:"enable_webchat"`
}

func (m *UpdateGuestSettingRequest) Reset()         { *m = UpdateGuestSettingRequest{} }
func (m *UpdateGuestSettingRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGuestSettingRequest) ProtoMessage()    {}
func (*UpdateGuestSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorOperatorMessage, []int{9}
}

func (m *UpdateGuestSettingRequest) GetEnableWebchat() bool {
	if m != nil && m.EnableWebchat != nil {
		return *m.EnableWebchat
	}
	return false
}

type CreateOperatorSettingRequest struct {
	SiteID               string `protobuf:"bytes,13,opt,name=site_id,json=siteId" json:"siteId"`
	Domain               string `protobuf:"bytes,14,opt,name=domain" json:"domain"`
	SystemUserID         string `protobuf:"bytes,15,opt,name=system_user_id,json=systemUserId" json:"systemUserId"`
	FirstMessage         []byte `protobuf:"bytes,16,opt,name=first_message,json=firstMessage" json:"firstMessage"`
	TimeoutMessage       []byte `protobuf:"bytes,17,opt,name=timeout_message,json=timeoutMessage" json:"timeoutMessage"`
	OperatorBaseURL      string `protobuf:"bytes,18,opt,name=operator_base_url,json=operatorBaseUrl" json:"operatorBaseUrl"`
	NotificationSlackURL string `protobuf:"bytes,19,opt,name=notification_slack_url,json=notificationSlackUrl" json:"notificationSlackUrl"`
}

func (m *CreateOperatorSettingRequest) Reset()         { *m = CreateOperatorSettingRequest{} }
func (m *CreateOperatorSettingRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOperatorSettingRequest) ProtoMessage()    {}
func (*CreateOperatorSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorOperatorMessage, []int{10}
}

func (m *CreateOperatorSettingRequest) GetSiteID() string {
	if m != nil {
		return m.SiteID
	}
	return ""
}

func (m *CreateOperatorSettingRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CreateOperatorSettingRequest) GetSystemUserID() string {
	if m != nil {
		return m.SystemUserID
	}
	return ""
}

func (m *CreateOperatorSettingRequest) GetFirstMessage() []byte {
	if m != nil {
		return m.FirstMessage
	}
	return nil
}

func (m *CreateOperatorSettingRequest) GetTimeoutMessage() []byte {
	if m != nil {
		return m.TimeoutMessage
	}
	return nil
}

func (m *CreateOperatorSettingRequest) GetOperatorBaseURL() string {
	if m != nil {
		return m.OperatorBaseURL
	}
	return ""
}

func (m *CreateOperatorSettingRequest) GetNotificationSlackURL() string {
	if m != nil {
		return m.NotificationSlackURL
	}
	return ""
}

type GetOperatorSettingRequest struct {
}

func (m *GetOperatorSettingRequest) Reset()         { *m = GetOperatorSettingRequest{} }
func (m *GetOperatorSettingRequest) String() string { return proto.CompactTextString(m) }
func (*GetOperatorSettingRequest) ProtoMessage()    {}
func (*GetOperatorSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorOperatorMessage, []int{11}
}

type UpdateOperatorSettingRequest struct {
	SiteID               *string `protobuf:"bytes,13,opt,name=site_id,json=siteId" json:"siteId"`
	Domain               *string `protobuf:"bytes,14,opt,name=domain" json:"domain,omitempty"`
	SystemUserID         *string `protobuf:"bytes,15,opt,name=system_user_id,json=systemUserId" json:"systemUserId"`
	FirstMessage         []byte  `protobuf:"bytes,16,opt,name=first_message,json=firstMessage" json:"firstMessage"`
	TimeoutMessage       []byte  `protobuf:"bytes,17,opt,name=timeout_message,json=timeoutMessage" json:"timeoutMessage"`
	OperatorBaseURL      *string `protobuf:"bytes,18,opt,name=operator_base_url,json=operatorBaseUrl" json:"operatorBaseUrl"`
	NotificationSlackURL *string `protobuf:"bytes,19,opt,name=notification_slack_url,json=notificationSlackUrl" json:"notificationSlackUrl"`
}

func (m *UpdateOperatorSettingRequest) Reset()         { *m = UpdateOperatorSettingRequest{} }
func (m *UpdateOperatorSettingRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOperatorSettingRequest) ProtoMessage()    {}
func (*UpdateOperatorSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorOperatorMessage, []int{12}
}

func (m *UpdateOperatorSettingRequest) GetSiteID() string {
	if m != nil && m.SiteID != nil {
		return *m.SiteID
	}
	return ""
}

func (m *UpdateOperatorSettingRequest) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *UpdateOperatorSettingRequest) GetSystemUserID() string {
	if m != nil && m.SystemUserID != nil {
		return *m.SystemUserID
	}
	return ""
}

func (m *UpdateOperatorSettingRequest) GetFirstMessage() []byte {
	if m != nil {
		return m.FirstMessage
	}
	return nil
}

func (m *UpdateOperatorSettingRequest) GetTimeoutMessage() []byte {
	if m != nil {
		return m.TimeoutMessage
	}
	return nil
}

func (m *UpdateOperatorSettingRequest) GetOperatorBaseURL() string {
	if m != nil && m.OperatorBaseURL != nil {
		return *m.OperatorBaseURL
	}
	return ""
}

func (m *UpdateOperatorSettingRequest) GetNotificationSlackURL() string {
	if m != nil && m.NotificationSlackURL != nil {
		return *m.NotificationSlackURL
	}
	return ""
}

func init() {
	proto.RegisterType((*Bot)(nil), "fairway.chatpb.Bot")
	proto.RegisterType((*GuestSetting)(nil), "fairway.chatpb.GuestSetting")
	proto.RegisterType((*OperatorSetting)(nil), "fairway.chatpb.OperatorSetting")
	proto.RegisterType((*CreateBotRequest)(nil), "fairway.chatpb.CreateBotRequest")
	proto.RegisterType((*GetBotRequest)(nil), "fairway.chatpb.GetBotRequest")
	proto.RegisterType((*CreateGuestRequest)(nil), "fairway.chatpb.CreateGuestRequest")
	proto.RegisterType((*GetGuestRequest)(nil), "fairway.chatpb.GetGuestRequest")
	proto.RegisterType((*CreateGuestSettingRequest)(nil), "fairway.chatpb.CreateGuestSettingRequest")
	proto.RegisterType((*GetGuestSettingRequest)(nil), "fairway.chatpb.GetGuestSettingRequest")
	proto.RegisterType((*UpdateGuestSettingRequest)(nil), "fairway.chatpb.UpdateGuestSettingRequest")
	proto.RegisterType((*CreateOperatorSettingRequest)(nil), "fairway.chatpb.CreateOperatorSettingRequest")
	proto.RegisterType((*GetOperatorSettingRequest)(nil), "fairway.chatpb.GetOperatorSettingRequest")
	proto.RegisterType((*UpdateOperatorSettingRequest)(nil), "fairway.chatpb.UpdateOperatorSettingRequest")
}

func init() { proto.RegisterFile("operatorMessage.proto", fileDescriptorOperatorMessage) }

var fileDescriptorOperatorMessage = []byte{
	// 1248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0xaf, 0xe3, 0x34, 0xb6, 0xc7, 0x8e, 0xdd, 0x4e, 0xdc, 0xc8, 0x6d, 0xa3, 0xac, 0x59, 0x68,
	0x65, 0x02, 0x49, 0x89, 0xd4, 0x0a, 0xa9, 0x2d, 0x12, 0x59, 0x22, 0xa2, 0xf0, 0xaf, 0x61, 0xac,
	0x80, 0xc4, 0xc5, 0x5a, 0xef, 0x8e, 0xdd, 0x69, 0xed, 0x9d, 0x65, 0x77, 0x4c, 0x94, 0x0f, 0xc0,
	0x81, 0x23, 0xdc, 0x38, 0xf2, 0x35, 0xf8, 0x04, 0x1c, 0xf9, 0x04, 0x7b, 0x80, 0x9b, 0x8f, 0xbe,
	0x71, 0x43, 0x33, 0xf3, 0xd6, 0xeb, 0x5d, 0xdb, 0x6d, 0x12, 0x55, 0x48, 0xdc, 0x76, 0xdf, 0xfb,
	0xbd, 0xdf, 0xcc, 0xce, 0xfb, 0xbd, 0xf9, 0xd9, 0xe8, 0x16, 0xf7, 0x69, 0x60, 0x0b, 0x1e, 0x7c,
	0x49, 0xc3, 0xd0, 0xee, 0xd3, 0x3d, 0x3f, 0xe0, 0x82, 0xe3, 0x6a, 0xcf, 0x66, 0xc1, 0x99, 0x7d,
	0xbe, 0xe7, 0x3c, 0xb7, 0x85, 0xdf, 0xbd, 0x53, 0xef, 0xf3, 0x3e, 0x57, 0xa9, 0x07, 0xf2, 0x49,
	0xa3, 0xcc, 0x1f, 0xaf, 0xa3, 0xbc, 0xc5, 0x05, 0xde, 0x41, 0x2b, 0xcc, 0x6d, 0x94, 0x9b, 0xb9,
	0xd6, 0xaa, 0x75, 0xe7, 0x8f, 0xc8, 0xb8, 0xf6, 0x57, 0x64, 0xac, 0x1c, 0x1f, 0x8e, 0x23, 0x23,
	0xb7, 0x3b, 0x89, 0x8c, 0x82, 0xdb, 0x7d, 0x6c, 0x32, 0xd7, 0x24, 0x2b, 0xcc, 0xc5, 0x4f, 0xd1,
	0x5a, 0x97, 0x8b, 0x0e, 0x73, 0x1b, 0x95, 0x66, 0xae, 0x55, 0xb2, 0xee, 0x01, 0xfe, 0xba, 0xc5,
	0x85, 0x2a, 0xb9, 0xde, 0xe5, 0xe2, 0xd8, 0x9d, 0x44, 0x46, 0x59, 0x96, 0x69, 0xac, 0x49, 0x74,
	0x14, 0x1f, 0xa0, 0xc2, 0x28, 0xa4, 0x81, 0x2c, 0x5f, 0x57, 0xe5, 0x2d, 0x28, 0x5f, 0x3b, 0x0d,
	0x69, 0xa0, 0xea, 0xd7, 0x24, 0x40, 0x11, 0x54, 0x24, 0x01, 0xc0, 0x4d, 0x02, 0x71, 0x7c, 0x88,
	0x0a, 0x21, 0x0d, 0x7e, 0x60, 0x0e, 0x6d, 0x54, 0x15, 0xc5, 0x0e, 0x50, 0x14, 0xda, 0x3a, 0x3c,
	0x8e, 0x8c, 0x18, 0x11, 0x93, 0xc0, 0xab, 0x49, 0xe2, 0x04, 0x3e, 0x41, 0xc8, 0x0f, 0xf8, 0x0b,
	0xea, 0xa8, 0x4f, 0xa9, 0x29, 0xa2, 0x7d, 0x20, 0x2a, 0x9d, 0xe8, 0x8c, 0xda, 0x4e, 0x09, 0x60,
	0x6a, 0x47, 0x35, 0x49, 0x96, 0xd4, 0x99, 0x24, 0xc9, 0x62, 0x86, 0x6a, 0x40, 0xde, 0xb1, 0x1d,
	0x87, 0x8f, 0x3c, 0xd1, 0xb8, 0xa1, 0x68, 0x3f, 0x06, 0xda, 0x2a, 0xec, 0xef, 0x40, 0x67, 0xc7,
	0x91, 0x51, 0x0d, 0x53, 0x91, 0x49, 0x64, 0xd4, 0x67, 0x76, 0x1b, 0xd3, 0x98, 0x24, 0x83, 0xc3,
	0x8f, 0x50, 0x21, 0x1c, 0xf5, 0xfb, 0x34, 0x14, 0x8d, 0x9b, 0xcd, 0x5c, 0xab, 0x68, 0xdd, 0x55,
	0xdf, 0xac, 0x43, 0xd3, 0x6f, 0xd6, 0xaf, 0xf2, 0x9b, 0xf5, 0x13, 0xde, 0x43, 0x05, 0x27, 0xa0,
	0xb6, 0xa0, 0x6e, 0x03, 0x37, 0x73, 0xad, 0xbc, 0x55, 0x97, 0x3b, 0x8b, 0xf1, 0x90, 0x32, 0x49,
	0x0c, 0xc2, 0xfb, 0xa8, 0x38, 0xe4, 0x2e, 0xeb, 0x31, 0xea, 0x36, 0x36, 0x54, 0xc1, 0x2d, 0x28,
	0x58, 0x97, 0x05, 0x71, 0xce, 0x24, 0x53, 0x98, 0x5c, 0xc2, 0xa5, 0x03, 0x2a, 0x97, 0xa8, 0xcf,
	0x2f, 0x01, 0x29, 0x93, 0xc4, 0xa0, 0xc7, 0xab, 0x7f, 0xfe, 0x66, 0x5c, 0x33, 0x7f, 0xce, 0xa1,
	0xca, 0xd1, 0x88, 0x86, 0xa2, 0x4d, 0x85, 0x60, 0x5e, 0xff, 0x52, 0x82, 0x7c, 0x86, 0xaa, 0xd4,
	0xb3, 0xbb, 0x03, 0xda, 0x39, 0xa3, 0x5d, 0x29, 0x77, 0x25, 0xcc, 0xa2, 0xd5, 0x1a, 0x47, 0xc6,
	0xba, 0xce, 0x7c, 0xab, 0x13, 0x93, 0xc8, 0xd8, 0x90, 0x95, 0x69, 0xb8, 0x49, 0xd2, 0x28, 0xd8,
	0xd3, 0x2f, 0x05, 0x54, 0x7b, 0x06, 0xb3, 0x75, 0x95, 0x6d, 0x9d, 0x20, 0x14, 0xea, 0xb2, 0x64,
	0x56, 0xa6, 0x02, 0x03, 0x42, 0x2d, 0x30, 0x80, 0x25, 0x02, 0x4b, 0xea, 0x4c, 0x92, 0x64, 0xe5,
	0xec, 0x84, 0x4c, 0xd0, 0x05, 0xb3, 0xd3, 0x66, 0x82, 0xea, 0xd9, 0x91, 0x80, 0x64, 0x76, 0x00,
	0x6e, 0x12, 0x88, 0xe3, 0xf7, 0xd0, 0x9a, 0xcb, 0x87, 0x36, 0xf3, 0x60, 0x74, 0x36, 0xa0, 0x3b,
	0x6a, 0x54, 0x75, 0xc6, 0x24, 0x00, 0xc1, 0x36, 0xaa, 0x86, 0xe7, 0xa1, 0xa0, 0xc3, 0x4e, 0x3c,
	0xb2, 0x7a, 0x4c, 0x9e, 0xc0, 0xb2, 0x95, 0xb6, 0xca, 0x4e, 0x07, 0xb7, 0x12, 0x26, 0xef, 0x6e,
	0x7c, 0xd6, 0x69, 0x06, 0x93, 0xa4, 0x40, 0xf8, 0x73, 0xb4, 0xde, 0x63, 0x41, 0x28, 0x3a, 0x43,
	0x7d, 0x7b, 0xa9, 0x89, 0xa9, 0x58, 0xf7, 0x25, 0x9b, 0x4a, 0xc0, 0xad, 0x36, 0x89, 0x0c, 0x2c,
	0xd9, 0x52, 0x60, 0x93, 0xa4, 0x30, 0xb8, 0x8d, 0x6a, 0x82, 0x0d, 0x29, 0x1f, 0x25, 0x74, 0x37,
	0x15, 0xdd, 0x8e, 0x1c, 0x35, 0x48, 0x25, 0x84, 0x6a, 0xd4, 0x32, 0x05, 0x26, 0xc9, 0xe0, 0xb0,
	0x8f, 0x6e, 0xc6, 0x37, 0x6c, 0xa7, 0x6b, 0x87, 0xb4, 0x33, 0x0a, 0x06, 0x6a, 0x7a, 0x4a, 0xd6,
	0x21, 0x9c, 0xc3, 0x54, 0x26, 0x96, 0x1d, 0xd2, 0x53, 0xf2, 0xc5, 0x38, 0x32, 0x6a, 0x7c, 0x36,
	0x14, 0x0c, 0x26, 0x91, 0xb1, 0x29, 0x97, 0x9b, 0xa3, 0x32, 0x49, 0x16, 0x8a, 0x7f, 0xca, 0xa1,
	0x4d, 0x8f, 0x0b, 0xd6, 0x63, 0x8e, 0x2d, 0x18, 0xf7, 0x3a, 0xe1, 0xc0, 0x76, 0x5e, 0xaa, 0x75,
	0x37, 0xd4, 0xba, 0x6d, 0x58, 0xb7, 0xfe, 0xd5, 0x0c, 0xaa, 0x2d, 0x41, 0x7a, 0xf1, 0xba, 0x37,
	0x17, 0x57, 0x3b, 0xb8, 0x2b, 0x77, 0xb0, 0x98, 0xd9, 0x24, 0x0b, 0x8b, 0xf0, 0x3d, 0x94, 0x67,
	0xae, 0xaf, 0x46, 0xb9, 0x62, 0x6d, 0x8c, 0x23, 0x43, 0xbe, 0x4e, 0x22, 0xa3, 0xa8, 0x95, 0xee,
	0x9b, 0x44, 0x06, 0x66, 0x2f, 0x96, 0xed, 0xcb, 0x5e, 0x2c, 0xc6, 0x85, 0x2e, 0x16, 0x18, 0xca,
	0xdf, 0x57, 0xd0, 0x8d, 0x4f, 0x14, 0x89, 0xc5, 0x05, 0xa1, 0xdf, 0xcb, 0x3b, 0x03, 0xef, 0x67,
	0x3d, 0xa5, 0xb1, 0xcc, 0x53, 0xa6, 0x1e, 0xf2, 0x30, 0xeb, 0x21, 0x77, 0x96, 0x7b, 0x48, 0xe2,
	0x19, 0x1f, 0x2d, 0xf0, 0x8c, 0xed, 0x57, 0x7b, 0xc6, 0xac, 0x41, 0x7c, 0xbd, 0xcc, 0x20, 0x5a,
	0x17, 0x35, 0x88, 0x39, 0x23, 0xb8, 0x97, 0x35, 0x82, 0xf2, 0x8c, 0x11, 0x4c, 0x2f, 0x7e, 0x38,
	0xbc, 0x33, 0xb4, 0x7e, 0x44, 0xc5, 0xcc, 0xc1, 0xed, 0x4e, 0xad, 0xbc, 0xac, 0xf6, 0xb1, 0xb9,
	0xd8, 0xca, 0x63, 0xef, 0xbe, 0xfc, 0x39, 0xc3, 0xc2, 0xbf, 0xe6, 0x11, 0xd6, 0x5d, 0x53, 0x97,
	0xfc, 0x82, 0xbe, 0x95, 0x2f, 0xd8, 0xb7, 0x06, 0x5a, 0xf5, 0xec, 0x21, 0x85, 0xeb, 0x74, 0x55,
	0xe2, 0x89, 0x8a, 0xe0, 0x03, 0x54, 0xf6, 0x99, 0x23, 0x46, 0x81, 0x9e, 0x50, 0xbd, 0xc1, 0x26,
	0x10, 0xa2, 0x13, 0x9d, 0xd2, 0xf3, 0x81, 0x00, 0x78, 0x1a, 0x0c, 0xc8, 0xcc, 0xb3, 0xec, 0x0f,
	0xf3, 0x7a, 0x3c, 0x18, 0xea, 0xe1, 0x90, 0x34, 0xd5, 0x74, 0x7f, 0x8e, 0x93, 0xb4, 0xa6, 0xaa,
	0xce, 0x14, 0x48, 0xba, 0xcc, 0x3b, 0x7e, 0x17, 0x95, 0x86, 0x54, 0xd8, 0x1d, 0xd7, 0x16, 0xb6,
	0x12, 0x4c, 0xc5, 0xaa, 0x8c, 0x23, 0xa3, 0x28, 0x83, 0x87, 0xb6, 0xb0, 0xc9, 0xf4, 0x09, 0x6f,
	0xa1, 0x35, 0x7f, 0xd4, 0x1d, 0x30, 0x47, 0x89, 0xa2, 0x08, 0x1f, 0x07, 0x31, 0xfc, 0x21, 0x2a,
	0x39, 0xb6, 0xd7, 0xe9, 0x0e, 0xb8, 0xf3, 0x12, 0x5a, 0xad, 0x24, 0x3b, 0x8e, 0x0c, 0xec, 0xd8,
	0x9e, 0x25, 0xe3, 0xef, 0xf3, 0x21, 0x13, 0x74, 0xe8, 0x8b, 0x73, 0x52, 0x8c, 0x63, 0xf2, 0xc4,
	0x06, 0xb6, 0xd7, 0x87, 0x2b, 0x0b, 0x4e, 0x4c, 0x46, 0xa0, 0x37, 0x4f, 0x51, 0xed, 0x88, 0x8a,
	0x54, 0x5f, 0xde, 0xce, 0xf6, 0x05, 0x2d, 0xed, 0x6c, 0x80, 0x6e, 0xcf, 0x34, 0x16, 0x5c, 0x2d,
	0xe6, 0x99, 0x37, 0xe6, 0xf2, 0x9b, 0x30, 0xe6, 0x6d, 0xb4, 0x19, 0xef, 0x38, 0xbd, 0x60, 0xb2,
	0xa7, 0x53, 0xdf, 0xfd, 0x6f, 0xf7, 0xf4, 0x4f, 0x1e, 0x6d, 0xe9, 0x83, 0xc8, 0xfc, 0x64, 0x98,
	0xd1, 0x7a, 0xda, 0xbb, 0x1b, 0xcb, 0xbc, 0x7b, 0xea, 0xd5, 0x5b, 0x19, 0xaf, 0x06, 0x41, 0x80,
	0x39, 0x7f, 0xb6, 0xc4, 0x9c, 0xdf, 0xb9, 0x88, 0x39, 0x67, 0x5c, 0xf8, 0xd1, 0x62, 0x17, 0xbe,
	0x91, 0x75, 0xe1, 0x8c, 0xdf, 0x3e, 0x59, 0xe6, 0xb7, 0x78, 0xde, 0x6f, 0xe7, 0x7c, 0xf5, 0x9b,
	0xe5, 0xbe, 0xba, 0x73, 0x71, 0x5f, 0x9d, 0x77, 0xcf, 0x17, 0xaf, 0x31, 0xcf, 0x87, 0x57, 0x31,
	0xcf, 0xc5, 0xee, 0x08, 0xbd, 0x7f, 0x0b, 0xdd, 0x3e, 0xa2, 0x62, 0x71, 0xdf, 0x01, 0xf2, 0x77,
	0x1e, 0x6d, 0x69, 0x4d, 0x2e, 0x91, 0xc7, 0x6e, 0x56, 0x1e, 0xf5, 0x57, 0x4a, 0x63, 0x33, 0x2d,
	0x8d, 0xa9, 0x28, 0x3e, 0x5d, 0x22, 0x8a, 0xe6, 0xff, 0x40, 0x10, 0x64, 0xb9, 0x20, 0xee, 0x5f,
	0x55, 0x0c, 0xbd, 0xd7, 0x88, 0xe1, 0x83, 0x37, 0x29, 0x04, 0xab, 0xf9, 0xdd, 0x76, 0x9f, 0x89,
	0xe7, 0xa3, 0xee, 0x9e, 0xc3, 0x87, 0x0f, 0xe0, 0x0f, 0xf8, 0xae, 0xc3, 0x03, 0xff, 0x81, 0xfe,
	0x17, 0xfe, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x61, 0x98, 0x20, 0x08, 0xad, 0x0f, 0x00, 0x00,
}
